{"version":3,"sources":["redux/updateReducer/types.ts","api/fakeApiData.ts","api/requestMethod.ts","redux/updateReducer/updateActions.ts","redux/authMeReducer/types.ts","redux/authMeReducer/authMeActions.ts","redux/bootCampsReducer/types.ts","redux/authMeReducer/authMeReducer.ts","redux/bootCampsReducer/bootCampsReducer.ts","redux/loginReducer/types.ts","redux/loginReducer/loginActions.ts","redux/logoutReducer/types.ts","redux/loginReducer/loginReducer.ts","redux/logoutReducer/logoutReducer.ts","redux/registerReducer/types.ts","redux/registerReducer/registerActions.ts","redux/resetReducer/types.ts","redux/registerReducer/registerReducer.ts","redux/resetReducer/resetReducer.ts","redux/updateReducer/updateReducer.ts","redux/rootReducer.ts","redux/logoutReducer/logoutActions.ts","icons/login.svg","icons/register.svg","icons/computer.svg","icons/arrows.svg","icons/userAccount.svg","icons/bottomArrow.svg","components/icons.ts","components/SvgCreator/SvgCreator.tsx","components/NavLinkCreator/NavLinkCreator.jsx","components/overrideHooks.ts","components/Navbar/Navbar.jsx","components/ErrorBoundary/ErrorBoundary.tsx","components/CustomForm/CustomForm.tsx","pictures/image_1.jpg","pictures/image_2.jpg","pictures/image_3.jpg","pictures/image_4.jpg","redux/bootCampsReducer/bootCampsActions.ts","components/Card/Card.tsx","components/CustomPaginate/CustomPaginate.tsx","components/SelectCreator/SelectCreator.tsx","components/SubmitButton/SubmitButton.tsx","components/CustomSelectForm/CustomSelectForm.tsx","components/BootCamps/BootCamps.tsx","components/FormTitle/FormTitle.tsx","components/globalConstants.ts","components/CustomInput/CustomInput.tsx","components/ForgotButton/ForgotButton.tsx","components/LoginForm/LoginForm.tsx","components/Login/Login.jsx","components/Home/Home.tsx","components/CustomRadioInput/CustomRadioInput.tsx","components/RegisterForm/RegisterForm.tsx","components/Register/Register.jsx","components/UpdateForm/UpdateForm.tsx","components/Update/Update.tsx","components/PrivateRoute/PrivateRoute.jsx","redux/resetReducer/resetActions.ts","components/ResetForm/ResetForm.tsx","components/Reset/Reset.jsx","components/RoutesContainer/RoutesContainer.tsx","App.tsx","index.tsx","components/Card/Card.module.scss","components/NavLinkCreator/NavLinkCreator.module.scss","components/Navbar/Navbar.module.scss","components/CustomSelectForm/CustomSelectForm.module.scss","components/BootCamps/BootCamps.module.scss","components/CustomRadioInput/CustomRadioInput.module.scss","components/CustomForm/CustomForm.module.scss","components/FormTitle/FormTitle.module.scss","components/CustomInput/CustomInput.module.scss","components/ForgotButton/ForgotButton.module.scss","components/LoginForm/LoginForm.module.scss","components/Home/Home.module.scss","components/RegisterForm/RegisterForm.module.scss","components/UpdateForm/UpdateForm.module.scss","components/ResetForm/ResetForm.module.scss","components/SubmitButton/SubmitButton.module.scss","components/Login/Login.module.scss","components/Register/Register.module.scss","components/Update/Update.module.scss","components/Reset/Reset.module.scss"],"names":["UpdaterTypes","getAllBootCampsData","baseUrl2","requestAPI","axios","get","then","res","Promise","resolve","catch","e","reject","success","error","payload","localStorage","setItem","getItem","email","name","role","console","warn","AuthMeTypes","updateActions","type","START","PROCESS","END","ERROR","RESET","BootCampsTypes","authMeActions","authMeThunk","dispatch","data","initialState","start","process","end","LoginTypes","count","pagination","LogoutTypes","loginActions","IS__COMPLETE","isRouteComplete","RegisterTypes","ResetTypes","registerActions","config","combineReducers","bootCamps","state","action","register","login","logout","authMe","update","reset","GLOBAL__TYPE__RESET","globalStateResetInRootReducerActions","logoutActions","logoutThunk","response","icons","computer","arrows","account","bottomArrow","SvgCreator","clsName","svgHref","className","href","NavLinkCreator","navArr","map","Array","isArray","line","styles","key","root","link","to","linkName","slice","replace","activeClassName","selected","svg","useSelector","useTypedSelector","Navbar","successLogin","successLogout","username","useDispatch","options","value","label","defaultOption","queryArr","onChange","placeholder","arr","innerContainer","logo","nav","ErrorBoundary","hasError","errorInfo","this","props","children","_","Component","CustomForm","useForm","handleSubmit","form","onSubmit","log","inputs","ref","btn","bootCampsActions","Card","src","address","careers","rate","alt","img","titleContainer","title","text","join","CustomPaginate","imgArr","img1","img2","img3","img4","useState","currentPage","setCurrentPage","useEffect","offset","currentPageData","pageCount","Math","ceil","length","i","id","previousLabel","nextLabel","onPageChange","selectedPage","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","pageRangeDisplayed","marginPagesDisplayed","breakLabel","SelectCreator","dataName","control","iconObj","defaultValue","as","components","DropdownIndicator","SubmitButton","CustomSelectForm","arrow","rating","budget","BootCamps","aside","location","cardContainer","FormTitle","top","subtitle","MY__CUSTOM__ERROR__CLASS__NAME","CustomInput","refForMatch","errors","required","autocomplete","span","input","validate","current","autoComplete","ForgotButton","forgotButtonContainer","LoginForm","history","useHistory","isRouteCompile","push","passwordInput","emailAddressInput","inputContainer","Login","Home","CustomRadioInput","radios","RegisterForm","watch","password","useRef","nameInput","confirmPassword","userRole","a","redText","Register","UpdateForm","currentPasswordInput","newPasswordInput","confirmNewPasswordInput","confirmNewPassword","Update","PrivateRoute","resetActions","ResetForm","resetPassWord","alert","Reset","RoutesContainer","exact","path","render","App","persistConfig","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunk","logger","persistor","persistStore","ReactDOM","StrictMode","loading","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c0452518.chunk.js","sourcesContent":["export enum UpdaterTypes {\r\n    START = 'UPDATE/UPDATE__START',\r\n    PROCESS = 'UPDATE/UPDATE__PROCESS',\r\n    END = 'UPDATE/UPDATE__END',\r\n    ERROR = 'UPDATE/UPDATE__ERROR',\r\n    RESET = 'UPDATE/UPDATE__RESET'\r\n}","export const getAllBootCampsData = {\r\n    \"success\": true,\r\n    \"count\": 4,\r\n    \"pagination\": {},\r\n    \"data\": [\r\n        {\r\n            \"careers\": [\r\n                \"Web Development\",\r\n                \"Data Science\",\r\n                \"Business\"\r\n            ],\r\n            \"photo\": \"no-photo.jpg\",\r\n            \"housing\": false,\r\n            \"jobAssistance\": false,\r\n            \"jobGuarantee\": false,\r\n            \"acceptGi\": false,\r\n            \"_id\": \"5d725a037b292f5f8ceff787\",\r\n            \"user\": \"5c8a1d5b0190b214360dc031\",\r\n            \"name\": \"Codemasters\",\r\n            \"description\": \"Is coding your passion? Codemasters will give you the skills and the tools to become the best developer possible. We specialize in full stack web development and data science\",\r\n\r\n            \"phone\": \"(333) 333-3333\",\r\n            \"email\": \"enroll@codemasters.com\",\r\n            \"address\": \"85 South Prospect Street Burlington VT 05405\",\r\n            \"createdAt\": \"2021-04-14T15:53:33.282Z\",\r\n            \"courses\": [],\r\n            \"id\": \"5d725a037b292f5f8ceff787\"\r\n        },\r\n        {\r\n            \"careers\": [\r\n                \"Web Development\",\r\n                \"UI/UX\",\r\n                \"Mobile Development\"\r\n            ],\r\n            \"photo\": \"no-photo.jpg\",\r\n            \"housing\": false,\r\n            \"jobAssistance\": true,\r\n            \"jobGuarantee\": false,\r\n            \"acceptGi\": true,\r\n            \"_id\": \"5d713a66ec8f2b88b8f830b8\",\r\n            \"user\": \"5d7a514b5d2c12c7449be046\",\r\n            \"name\": \"ModernTech Bootcamp\",\r\n            \"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\r\n            \r\n            \"phone\": \"(222) 222-2222\",\r\n            \"email\": \"enroll@moderntech.com\",\r\n            \"address\": \"220 Pawtucket St, Lowell, MA 01854\",\r\n            \"createdAt\": \"2021-04-14T15:53:33.285Z\",\r\n            \"courses\": [],\r\n            \"id\": \"5d713a66ec8f2b88b8f830b8\"\r\n        },\r\n        {\r\n            \"careers\": [\r\n                \"Mobile Development\",\r\n                \"Web Development\",\r\n                \"Data Science\",\r\n                \"Business\"\r\n            ],\r\n            \"photo\": \"no-photo.jpg\",\r\n            \"housing\": false,\r\n            \"jobAssistance\": true,\r\n            \"jobGuarantee\": true,\r\n            \"acceptGi\": true,\r\n            \"_id\": \"5d725a1b7b292f5f8ceff788\",\r\n            \"user\": \"5c8a1d5b0190b214360dc032\",\r\n            \"name\": \"Devcentral Bootcamp\",\r\n            \"description\": \"Is coding your passion? Codemasters will give you the skills and the tools to become the best developer possible. We specialize in front end and full stack web development\",\r\n            \r\n            \"phone\": \"(444) 444-4444\",\r\n            \"email\": \"enroll@devcentral.com\",\r\n            \"address\": \"45 Upper College Rd Kingston RI 02881\",\r\n            \"createdAt\": \"2021-04-14T15:53:33.290Z\",\r\n            \"courses\": [],\r\n            \"id\": \"5d725a1b7b292f5f8ceff788\"\r\n        },\r\n        {\r\n            \"careers\": [\r\n                \"Web Development\",\r\n                \"UI/UX\",\r\n                \"Business\"\r\n            ],\r\n            \"photo\": \"no-photo.jpg\",\r\n            \"housing\": true,\r\n            \"jobAssistance\": true,\r\n            \"jobGuarantee\": false,\r\n            \"acceptGi\": true,\r\n            \"_id\": \"5d713995b721c3bb38c1f5d0\",\r\n            \"user\": \"5d7a514b5d2c12c7449be045\",\r\n            \"name\": \"Devworks Bootcamp\",\r\n            \"description\": \"Devworks is a full stack JavaScript Bootcamp located in the heart of Boston that focuses on the technologies you need to get a high paying job as a web developer\",\r\n            \r\n            \"phone\": \"(111) 111-1111\",\r\n            \"email\": \"enroll@devworks.com\",\r\n            \"address\": \"233 Bay State Rd Boston MA 02215\",\r\n            \"createdAt\": \"2021-04-14T15:53:33.304Z\",\r\n            \"courses\": [],\r\n            \"id\": \"5d713995b721c3bb38c1f5d0\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport type GetAllBootCampsData = typeof getAllBootCampsData","import { IResetPayload } from './../components/ResetForm/ResetForm';\r\nimport { ILoginPayload } from './../components/LoginForm/LoginForm';\r\nimport { IRegisterPayload } from './../components/RegisterForm/RegisterForm';\r\nimport axios from \"axios\"\r\nimport { getAllBootCampsData } from \"./fakeApiData\"\r\nimport { IUpdatePayload } from '../components/UpdateForm/UpdateForm';\r\n\r\n// const API__NAME = '?'\r\n// const VERSION = '?'\r\n// const AUTH__PATH = '?'\r\n\r\n// const baseUrl = `?.com/${API__NAME}/${VERSION}/`\r\n\r\n// const GET__ALL__BOOT__CAMPS__URL = '?'\r\n// const REGISTER__URL = `${AUTH__PATH}/?`\r\n// const LOGIN__URL = `${AUTH__PATH}/?`\r\n// const LOGOUT__URL = `${AUTH__PATH}/?`\r\n// const AUTH__ME__URL = `${AUTH__PATH}/?`\r\n// const UPDATE__PASSWORD__URL = `${AUTH__PATH}/?`\r\n\r\n// const FORGOT__PASSWORD__URL = `${AUTH__PATH}/?`\r\n\r\n// const axiosInstance = axios.create({\r\n//     baseURL:baseUrl,\r\n//     headers:{\r\n//         'Content-Type': 'application/json'\r\n//     }\r\n// })\r\n\r\nconst baseUrl2 = `https://jsonplaceholder.typicode.com/posts/`\r\n\r\n\r\ntype DataType = typeof getAllBootCampsData\r\nexport type BootCampsData = typeof getAllBootCampsData.data\r\n\r\nconst getAllBootCamps = () => {\r\n    return axios.get<DataType>(baseUrl2)\r\n    .then(res => {\r\n        return Promise.resolve(getAllBootCampsData)\r\n        // return res.data\r\n\r\n    })\r\n    .catch(e => {\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'not found'\r\n        })\r\n        // return Promise.reject(e.response.data)\r\n    })\r\n}\r\n\r\nconst register = (payload:IRegisterPayload) => {\r\n    return axios.get(baseUrl2)\r\n    .then(res => {\r\n        localStorage.setItem('token','fake_Token')\r\n        return Promise.resolve({success:true})\r\n    }).catch(e => {\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'cannot register'\r\n        })\r\n    })\r\n}\r\n\r\nconst login = (payload:ILoginPayload) => {\r\n    return axios.get(baseUrl2).then(res => {\r\n        localStorage.setItem('token','fake_Token')\r\n        return Promise.resolve({success:true})\r\n        // return res.data.success\r\n    }).catch(e => {\r\n        // return Promise.reject(e.response.data)\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'don\\'t rightful login or email'\r\n        })\r\n    })\r\n}\r\n\r\nconst logout = () => {\r\n    return axios.get(baseUrl2)\r\n    .then(res => {\r\n        localStorage.setItem('token','')\r\n        return Promise.resolve({success:true})\r\n        // return res.data\r\n    })\r\n    .catch(e => {\r\n        // return Promise.reject(e.response.data)\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'something go wrong '\r\n        })\r\n    })\r\n}\r\n\r\nconst authMe = () => {\r\n    if(!localStorage.getItem('token')){\r\n        console.warn(`object`)\r\n        return Promise.reject({\r\n            error: \"Not authorized to access this route\",\r\n            success: false\r\n        })\r\n    }\r\n    return axios.get(baseUrl2)\r\n    .then(res => {\r\n        //return res.data\r\n        return Promise.resolve({\r\n            success:true,\r\n            email:'fake@mail.ru',\r\n            name:'fake',\r\n            role:'fake'\r\n        })\r\n    }).catch(e => {\r\n        // return Promise.reject(e.response.data)\r\n        return Promise.reject({\r\n            error: \"Not authorized to access this route\",\r\n            success: false\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\nconst updatePassword = (payload:IUpdatePayload) => {\r\n    return axios.get(baseUrl2)\r\n    .then(res => {\r\n        return Promise.resolve({success:true})\r\n    })\r\n    .catch(e => {\r\n        // return Promise.reject(e.response.data)\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'update don\\'t completed'\r\n        })\r\n    })\r\n}\r\n\r\nconst resetPassword = (payload:IResetPayload) => {\r\n    return axios.get(baseUrl2)\r\n    .then(res => {\r\n        return Promise.resolve({success:true})\r\n    })\r\n    .catch(e => {\r\n        // return Promise.reject(e.response.data)\r\n        return Promise.reject({\r\n            success:false,\r\n            error:'update don\\'t completed'\r\n        })\r\n    })\r\n}\r\n\r\nexport const requestAPI = {\r\n    getAllBootCamps,\r\n    register,\r\n    login,\r\n    logout,\r\n    authMe,\r\n    updatePassword,\r\n    resetPassword\r\n}\r\n\r\n\r\n\r\n","import { IUpdatePayload } from './../../components/UpdateForm/UpdateForm';\r\nimport { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\"\r\nimport { logoutThunk } from \"../logoutReducer/logoutActions\"\r\nimport { UpdaterTypes } from \"./types\"\r\n\r\n\r\nexport const updateActions = {\r\n    start:() => {\r\n        return {type:UpdaterTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:UpdaterTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:UpdaterTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:UpdaterTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:UpdaterTypes.RESET} as const\r\n    }\r\n}\r\nexport type UpdateActionsTypes = GetActionsTypes<typeof updateActions>\r\n\r\nexport const updateThunk = (payload:IUpdatePayload):ThunkType<UpdateActionsTypes> => (dispatch) => {\r\n    dispatch(updateActions.start())\r\n    dispatch(updateActions.process())\r\n    requestAPI.updatePassword(payload)\r\n    .then(data => {\r\n        //need another way\r\n        dispatch(logoutThunk())\r\n        //need another way\r\n        dispatch(updateActions.end(data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(updateActions.error(e.response.data))\r\n    })\r\n}\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}","export enum AuthMeTypes {\r\n    START = 'AUTH__ME/AUTH__ME__START',\r\n    PROCESS = 'AUTH__ME/AUTH__ME__PROCESS',\r\n    END = 'AUTH__ME/AUTH__ME__END',\r\n    ERROR = 'AUTH__ME/AUTH__ME__ERROR',\r\n    RESET = 'AUTH__ME/AUTH__ME__RESET',\r\n}\r\n","import { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\";\r\nimport { AuthMeTypes } from './types';\r\n\r\n\r\nexport const authMeActions = {\r\n    start:() => {\r\n        return {type:AuthMeTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:AuthMeTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:AuthMeTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:AuthMeTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:AuthMeTypes.RESET} as const\r\n    }\r\n}\r\n\r\nexport type AuthMeActionTypes = GetActionsTypes<typeof authMeActions>\r\n\r\nexport const authMeThunk = ():ThunkType<AuthMeActionTypes> => (dispatch) => {\r\n    dispatch(authMeActions.start())\r\n    dispatch(authMeActions.process())\r\n    requestAPI.authMe()\r\n    .then(data => {\r\n        console.warn(`xxxxxxxxxxxxxxx`)\r\n        dispatch(authMeActions.end(data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(authMeActions.error(e))\r\n    })\r\n}\r\n\r\n\r\ntype EndPayload = {\r\n    success: boolean;\r\n    email: string;\r\n    name: string;\r\n    role: string;\r\n    \r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}\r\n\r\n","export enum BootCampsTypes{\r\n    START = 'BOOT__CAMPS/BOOT__CAMPS__START',\r\n    PROCESS = 'BOOT__CAMPS/BOOT__CAMPS__PROCESS',\r\n    END = 'BOOT__CAMPS/BOOT__CAMPS__END',\r\n    ERROR = 'BOOT__CAMPS/BOOT__CAMPS__ERROR',\r\n    RESET = 'BOOT__CAMPS/BOOT__CAMPS__RESET',\r\n}","\r\nimport { AuthMeActionTypes } from \"./authMeActions\"\r\nimport { AuthMeTypes } from \"./types\"\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:\"\",\r\n    success:false,\r\n    email: \"\",\r\n    name: \"\",\r\n    role: \"\",\r\n}\r\n\r\n\r\n\r\nexport const authMeReducer = (state:InitialState = initialState,action:AuthMeActionTypes):InitialState => {\r\n    switch(action.type){\r\n        case AuthMeTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case AuthMeTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case AuthMeTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                error:'',\r\n                ...action.payload\r\n            }\r\n        case AuthMeTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                email: \"\",\r\n                name: \"\",\r\n                role: \"\",\r\n                ...action.payload\r\n            }\r\n        case AuthMeTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false,\r\n                email: \"\",\r\n                name: \"\",\r\n                role: \"\",\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState\r\n","import { BootCampsData } from \"../../api/requestMethod\"\r\nimport { BootCampsActionTypes, Pagination } from \"./bootCampsActions\"\r\nimport { BootCampsTypes } from \"./types\"\r\n\r\nconst initialState = {\r\n    count:1,\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:\"\",\r\n    success:false,\r\n    data:[] as BootCampsData,\r\n    pagination:{} as Pagination\r\n}\r\n\r\nexport const bootCampsReducer = (state:InitialState = initialState,action:BootCampsActionTypes):InitialState => {\r\n    switch(action.type){\r\n        case BootCampsTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case BootCampsTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case BootCampsTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                ...action.payload\r\n            }\r\n        case BootCampsTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                ...action.payload\r\n            }\r\n        case BootCampsTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false,\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState\r\n","export enum LoginTypes {\r\n    START = 'LOGIN/LOGIN__START',\r\n    PROCESS = 'LOGIN/LOGIN__PROCESS',\r\n    END = 'LOGIN/LOGIN__END',\r\n    ERROR = 'LOGIN/LOGIN__ERROR',\r\n    RESET = 'LOGIN/LOGIN__RESET',\r\n    IS__COMPLETE = 'LOGIN/ IS__COMPLETE'\r\n}\r\n","import { ILoginPayload } from './../../components/LoginForm/LoginForm';\r\nimport { LogoutActionsTypes } from './../logoutReducer/logoutActions';\r\nimport { requestAPI } from \"../../api/requestMethod\"\r\nimport { authMeThunk } from \"../authMeReducer/authMeActions\"\r\nimport { logoutActions } from \"../logoutReducer/logoutActions\"\r\nimport { LoginTypes } from \"./types\"\r\nimport { GetActionsTypes, ThunkType } from '../../globalTypes';\r\nimport { updateActions, UpdateActionsTypes } from '../updateReducer/updateActions';\r\n\r\n\r\n\r\n\r\nexport const loginActions = {\r\n    start:() => {\r\n        return {type:LoginTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:LoginTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:LoginTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:LoginTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:LoginTypes.RESET} as const\r\n    },\r\n    isComplete:() => {\r\n        return {type:LoginTypes.IS__COMPLETE} as const\r\n    }\r\n}\r\n\r\nexport type LoginActionsTypes = GetActionsTypes<typeof loginActions>\r\n\r\nexport const loginThunk = (payload:ILoginPayload):ThunkType<LoginActionsTypes | LogoutActionsTypes | UpdateActionsTypes> => (dispatch) => {\r\n    dispatch(loginActions.start())\r\n    dispatch(loginActions.process())\r\n    requestAPI.login(payload)\r\n    .then(data => {\r\n        dispatch(logoutActions.reset())\r\n        dispatch(updateActions.reset())\r\n        dispatch(loginActions.end(data))\r\n        dispatch(authMeThunk())\r\n    })\r\n    .catch(e => {\r\n        dispatch(loginActions.error(e))\r\n    })\r\n}\r\n\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n}\r\n\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}","export enum LogoutTypes {\r\n    START = 'LOGOUT/LOGOUT__START',\r\n    PROCESS = 'LOGOUT/LOGOUT__PROCESS',\r\n    END = 'LOGOUT/LOGOUT__END',\r\n    ERROR = 'LOGOUT/LOGOUT__ERROR',\r\n    RESET = 'LOGOUT/LOGOUT__RESET'\r\n}","import { LoginActionsTypes } from \"./loginActions\"\r\nimport { LoginTypes } from \"./types\"\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:'',\r\n    isRouteComplete:false,\r\n    success:false,\r\n}\r\n\r\nexport const loginReducer = (state:InitialState = initialState,action:LoginActionsTypes):InitialState => {\r\n    switch(action.type){\r\n        case LoginTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case LoginTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case LoginTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                isRouteComplete:true,\r\n                ...action.payload\r\n            }\r\n        case LoginTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                isRouteComplete:false,\r\n                ...action.payload\r\n            }\r\n        case LoginTypes.IS__COMPLETE:\r\n            return {\r\n                ...state,\r\n                isRouteComplete:false\r\n\r\n            }\r\n        case LoginTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                isRouteComplete:false,\r\n                success:false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState","import { LogoutActionsTypes } from \"./logoutActions\"\r\nimport { LogoutTypes } from \"./types\"\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:'',\r\n    success:false,\r\n}\r\n\r\nexport const logoutReducer = (state:InitialState = initialState,action:LogoutActionsTypes):InitialState => {\r\n    switch(action.type){\r\n        case LogoutTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case LogoutTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case LogoutTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                ...action.payload\r\n            }\r\n        case LogoutTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                ...action.payload\r\n            }\r\n        case LogoutTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState\r\n","export enum RegisterTypes {\r\n    START = 'REGISTER/REGISTER__START',\r\n    PROCESS = 'REGISTER/REGISTER__PROCESS',\r\n    END = 'REGISTER/REGISTER__END',\r\n    ERROR = 'REGISTER/REGISTER__ERROR',\r\n    RESET = 'REGISTER/REGISTER__RESET'\r\n}","import { IRegisterPayload } from './../../components/RegisterForm/RegisterForm';\r\nimport { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\"\r\nimport { RegisterTypes } from \"./types\"\r\n\r\n\r\n\r\n\r\n\r\nexport const registerActions = {\r\n    start:() => {\r\n        return {type:RegisterTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:RegisterTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:RegisterTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:RegisterTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:RegisterTypes.RESET} as const\r\n    }\r\n}\r\nexport type RegisterActionsTypes = GetActionsTypes<typeof registerActions>\r\n\r\nexport const registerThunk = (payload:IRegisterPayload):ThunkType<RegisterActionsTypes> => async(dispatch) => {\r\n    dispatch(registerActions.start())\r\n    dispatch(registerActions.process())\r\n    requestAPI.register(payload)\r\n    .then(data => {\r\n        dispatch(registerActions.end({success:data.success}))\r\n    })\r\n    .catch(e => {\r\n        dispatch(registerActions.error(e.response.data))\r\n    })\r\n}\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}","export enum ResetTypes {\r\n    START = 'RESET/RESET__START',\r\n    PROCESS = 'RESET/RESET__PROCESS',\r\n    END = 'RESET/RESET__END',\r\n    ERROR = 'RESET/RESET__ERROR',\r\n    RESET = 'RESET/RESET__RESET'\r\n}","import { RegisterActionsTypes } from './registerActions';\r\nimport { RegisterTypes } from './types';\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:'',\r\n    success:false\r\n}\r\n\r\nexport const registerReducer = (state:InitialState = initialState,action:RegisterActionsTypes):InitialState => {\r\n    switch(action.type){\r\n        case RegisterTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case RegisterTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case RegisterTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                ...action.payload\r\n            }\r\n        case RegisterTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                ...action.payload\r\n            }\r\n        case RegisterTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState","//updateReducer\r\n\r\nimport { ResetActionsTypes } from \"./resetActions\"\r\nimport { ResetTypes } from \"./types\"\r\n\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:'',\r\n    success:false,\r\n}\r\n\r\nexport const resetReducer = (state:InitialState = initialState,action:ResetActionsTypes):InitialState => {\r\n    switch(action.type){\r\n        case ResetTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case ResetTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case ResetTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                ...action.payload\r\n            }\r\n        case ResetTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                ...action.payload\r\n            }\r\n        case ResetTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false,\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState","import { UpdateActionsTypes } from './updateActions';\r\n//updateReducer\r\nimport { UpdaterTypes } from \"./types\"\r\n\r\nconst initialState = {\r\n    start:false,\r\n    process:false,\r\n    end:false,\r\n    error:'',\r\n    success:false,\r\n}\r\n\r\nexport const updateReducer = (state:InitialState = initialState,action:UpdateActionsTypes):InitialState => {\r\n    switch(action.type){\r\n        case UpdaterTypes.START:\r\n            return {\r\n                ...state,\r\n                start:true,\r\n                end:false,\r\n            }\r\n        case UpdaterTypes.PROCESS:\r\n            return {\r\n                ...state,\r\n                process:true,\r\n            }\r\n        case UpdaterTypes.END:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:true,\r\n                ...action.payload\r\n            }\r\n        case UpdaterTypes.ERROR:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                ...action.payload\r\n            }\r\n        case UpdaterTypes.RESET:\r\n            return {\r\n                ...state,\r\n                start:false,\r\n                process:false,\r\n                end:false,\r\n                error:'',\r\n                success:false,\r\n\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype InitialState = typeof initialState","import { updateActions } from './updateReducer/updateActions';\r\nimport { combineReducers } from \"redux\";\r\nimport { GetActionsTypes, ThunkType } from \"../globalTypes\";\r\nimport { authMeActions } from \"./authMeReducer/authMeActions\";\r\nimport { authMeReducer } from \"./authMeReducer/authMeReducer\";\r\nimport { bootCampsReducer } from \"./bootCampsReducer/bootCampsReducer\";\r\nimport { loginActions } from \"./loginReducer/loginActions\";\r\nimport { loginReducer } from \"./loginReducer/loginReducer\";\r\nimport { logoutReducer } from \"./logoutReducer/logoutReducer\";\r\nimport { registerActions } from './registerReducer/registerActions';\r\nimport { registerReducer } from \"./registerReducer/registerReducer\";\r\nimport { resetReducer } from \"./resetReducer/resetReducer\";\r\nimport { updateReducer } from \"./updateReducer/updateReducer\";\r\n\r\nexport const config = combineReducers({\r\n    bootCamps:bootCampsReducer,\r\n    register:registerReducer,\r\n    login:loginReducer,\r\n    logout:logoutReducer,\r\n    authMe:authMeReducer,\r\n    update:updateReducer,\r\n    reset:resetReducer,\r\n})\r\nexport const GLOBAL__TYPE__RESET = 'ROOT__REDUCER/GLOBAL__TYPE__RESET'\r\n\r\n\r\nconst globalStateResetInRootReducerActions = {\r\n    reset:() => {\r\n        return {type:GLOBAL__TYPE__RESET}\r\n    }\r\n}\r\nconst initialState = {}\r\n\r\nexport const rootReducer = (state:any,action:any):InitialState => {\r\n\r\n    if(action.type === GLOBAL__TYPE__RESET){\r\n        //TODO reset state logic?(state == null(delete serialization state)) or use Thunk?\r\n        return state\r\n    }\r\n    return config(state,action)\r\n}\r\n\r\ntype globalStateResetInRootReducerTypes = GetActionsTypes<typeof globalStateResetInRootReducerActions>\r\n\r\nexport const globalStateResetInRootReducerThunk = ():ThunkType<globalStateResetInRootReducerTypes > => (dispatch) => {\r\n    dispatch(authMeActions.reset())\r\n    dispatch(loginActions.reset())\r\n    dispatch(registerActions.reset())\r\n    dispatch(updateActions.reset())\r\n    localStorage.setItem('token','')\r\n    dispatch(globalStateResetInRootReducerActions.reset())\r\n}\r\n\r\ntype InitialState = typeof initialState","import { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\"\r\nimport { globalStateResetInRootReducerThunk } from \"../rootReducer\"\r\nimport { LogoutTypes } from \"./types\"\r\n\r\n\r\n\r\nexport const logoutActions = {\r\n    start:() => {\r\n        return {type:LogoutTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:LogoutTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:LogoutTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:LogoutTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:LogoutTypes.RESET} as const\r\n    }\r\n}\r\nexport type LogoutActionsTypes = GetActionsTypes<typeof logoutActions>\r\n\r\n\r\nexport const logoutThunk = ():ThunkType<LogoutActionsTypes> => (dispatch) => {\r\n    dispatch(logoutActions.start())\r\n    dispatch(logoutActions.process())\r\n    requestAPI.logout()\r\n    .then(data => {\r\n        dispatch(globalStateResetInRootReducerThunk())\r\n        dispatch(logoutActions.end(data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(logoutActions.error(e.response.data))\r\n    })\r\n}\r\n\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}\r\n","export default __webpack_public_path__ + \"static/media/login.8dbdff8c.svg\";","export default __webpack_public_path__ + \"static/media/register.7bd5f0dc.svg\";","export default __webpack_public_path__ + \"static/media/computer.3a63a393.svg\";","export default __webpack_public_path__ + \"static/media/arrows.9918e56f.svg\";","export default __webpack_public_path__ + \"static/media/userAccount.64194e9c.svg\";","export default __webpack_public_path__ + \"static/media/bottomArrow.eb2f7279.svg\";","import login from '../icons/login.svg'\r\nimport register from '../icons/register.svg'\r\nimport computer from '../icons/computer.svg'\r\nimport arrows from '../icons/arrows.svg'\r\nimport account from '../icons/userAccount.svg'\r\nimport bottomArrow from '../icons/bottomArrow.svg'\r\n\r\n\r\n\r\nexport const icons = {\r\n    login,\r\n    register,\r\n    computer,\r\n    arrows,\r\n    account,\r\n    bottomArrow,\r\n}","import React from 'react'\r\n\r\ninterface SvgCreatorProps{\r\n    clsName:string,\r\n    svgHref:string\r\n}\r\n\r\nexport const SvgCreator:React.FC<SvgCreatorProps> = ({clsName,svgHref}) => {\r\n    return (\r\n        <svg className={clsName}>\r\n            <use href={svgHref} />\r\n        </svg>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { SvgCreator } from \"../SvgCreator/SvgCreator\";\r\nimport styles from \"./NavLinkCreator.module.scss\";\r\n\r\nexport const NavLinkCreator = ({ navArr }) => {\r\n  return navArr.map((e) => {\r\n    if (Array.isArray(e)) {\r\n        return e\r\n    }\r\n    if (e.line) {\r\n      return <span key={e.key} className={styles.line}></span>;\r\n    }\r\n    return (\r\n      <div key={e.linkName} className={styles.root}>\r\n        <NavLink\r\n          className={styles.link}\r\n          to={`/${e.linkName.slice().replace(/\\s/g, \"\")}`}\r\n          activeClassName={styles.selected}\r\n        >\r\n          {e.svgHref && <SvgCreator clsName={styles.svg} svgHref={e.svgHref} />}\r\n          {e.linkName && <span>{e.linkName}</span>}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n","import { TypedUseSelectorHook, useSelector as useTypedSelector } from 'react-redux';\r\nimport { RootState } from '../globalTypes';\r\n\r\n\r\nexport const useSelector:TypedUseSelectorHook<RootState> = useTypedSelector","import React from 'react'\r\nimport Dropdown from 'react-dropdown'\r\nimport 'react-dropdown/style.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logoutThunk } from '../../redux/logoutReducer/logoutActions'\r\nimport { icons } from '../icons'\r\nimport { NavLinkCreator } from '../NavLinkCreator/NavLinkCreator'\r\nimport { useSelector } from '../overrideHooks'\r\nimport { SvgCreator } from '../SvgCreator/SvgCreator'\r\nimport styles from './Navbar.module.scss'\r\n\r\n\r\nexport const Navbar = () => {\r\n    \r\n    const successLogin = useSelector(state => state.login.success)\r\n    const successLogout = useSelector(state => state.logout.success)\r\n    const username = useSelector(state => state.authMe.name)\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleChange = () => {\r\n        dispatch(logoutThunk())\r\n    }\r\n\r\n    const options = [\r\n        { key: 'logout',value: 'logout', label: 'logout' },\r\n      ];\r\n      const defaultOption = options[0];\r\n\r\n    let queryArr = successLogin && !successLogout ? \r\n    [\r\n        {linkName:'Update Password'},\r\n        {linkName: username || 'Account',svgHref:`${icons.account}#accountLogo`},\r\n        [<Dropdown key=\"dropDown\" options={options} onChange={handleChange} value={defaultOption} placeholder=\"Select an option\" />]\r\n    ] : \r\n    [\r\n        {linkName:'Login',svgHref:`${icons.login}#loginLogo`},  \r\n        {linkName:'Register',svgHref:`${icons.register}#registerLogo`},\r\n    ]\r\n\r\n    const arr = [\r\n    {linkName:'Home'},\r\n    ...queryArr,\r\n    {line:true,key:'line1'},\r\n    {linkName:'BrowserBootCamps'}\r\n]\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className=\"container\">\r\n                <div className={styles.innerContainer}>\r\n                    <div className={styles.logo}>\r\n                        <SvgCreator clsName={styles.svg} svgHref={`${icons.computer}#computerLogo`}/>\r\n                        <p>DevCamper</p>\r\n                    </div>\r\n                    <nav className={styles.nav}>\r\n                        <NavLinkCreator navArr={arr}/>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component, ErrorInfo, ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false\r\n  };\r\n\r\n  public static getDerivedStateFromError(_: Error): State {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error(\"Uncaught error:\", error, errorInfo);\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Sorry.. there was an error</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport styles from './CustomForm.module.scss';\r\n\r\ninterface ICustomFormSubmitData {\r\n  first:string\r\n  second:string\r\n}\r\n\r\nexport const CustomForm:React.FC = () => {\r\n    const { register, handleSubmit} = useForm();\r\n    const onSubmit = (data:ICustomFormSubmitData) => {\r\n      console.log(data);\r\n    };\r\n\r\n    return (\r\n      <div className={styles.root}>\r\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={styles.inputs}>\r\n            <input\r\n              ref={register}\r\n              placeholder=\"Miles From\"\r\n              name=\"first\"\r\n              type=\"text\"\r\n            />\r\n            <input\r\n              ref={register}\r\n              placeholder=\"Enter Zipcode\"\r\n              name=\"second\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className={styles.btn}>\r\n            <label>\r\n              <input type=\"submit\" value=\"Find Bootcamps\" />\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image_1.3a836161.jpg\";","export default __webpack_public_path__ + \"static/media/image_2.b94d84f4.jpg\";","export default __webpack_public_path__ + \"static/media/image_3.e1533ae4.jpg\";","export default __webpack_public_path__ + \"static/media/image_4.1e136a5d.jpg\";","import { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\";\r\nimport { BootCampsTypes } from './types';\r\n\r\n\r\n\r\nexport const bootCampsActions = {\r\n    start:() => {\r\n        return {type:BootCampsTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:BootCampsTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:BootCampsTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:BootCampsTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:BootCampsTypes.RESET} as const\r\n    }\r\n}\r\n\r\nexport type BootCampsActionTypes = GetActionsTypes<typeof bootCampsActions>\r\n\r\n\r\nexport const bootCampsThunk = ():ThunkType<BootCampsActionTypes> => (dispatch) => {\r\n    dispatch(bootCampsActions.start())\r\n    dispatch(bootCampsActions.process())\r\n    requestAPI.getAllBootCamps()\r\n    .then(data => {\r\n        dispatch(bootCampsActions.end(data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(bootCampsActions.error(e.response.data))\r\n    })\r\n}\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n    data:Array<any>,\r\n    pagination:Pagination\r\n}\r\n\r\nexport type Pagination = {\r\n\r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}","import React from \"react\";\r\nimport styles from \"./Card.module.scss\";\r\n\r\ninterface ICardProps {\r\n  src?:string\r\n  name?:string\r\n  address?:string\r\n  careers?:Array<string>\r\n  rate?:number | string\r\n  alt?:string,\r\n  key:string | number\r\n}\r\nexport const Card:React.FC<ICardProps> = ({ key,src, name, address, careers, rate, alt }) => {\r\n  return (\r\n    <div key={key} className={styles.root}>\r\n      <div className={styles.img}>\r\n        <img src={src || \"\"} alt={alt || \"api doesn't give photo\"} />\r\n      </div>\r\n      <div className={styles.titleContainer}>\r\n        <h3 className={styles.title}>{name || \"Devworks Bootcamp\"}</h3>\r\n        <div className={styles.address}>\r\n          <span>{address || \"Boston, MA\"}</span>\r\n        </div>\r\n        <p className={styles.text}>\r\n          {careers?.slice().join(\" \") ||\r\n            \"Web Development, UI/UX, Mobile Development\"}\r\n        </p>\r\n      </div>\r\n      <div className={styles.rate}>\r\n        <span>{rate || \"0.0\"}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport { useDispatch } from 'react-redux'\r\nimport img1 from '../../pictures/image_1.jpg'\r\nimport img2 from '../../pictures/image_2.jpg'\r\nimport img3 from '../../pictures/image_3.jpg'\r\nimport img4 from '../../pictures/image_4.jpg'\r\nimport { bootCampsThunk } from '../../redux/bootCampsReducer/bootCampsActions'\r\nimport { Card } from '../Card/Card'\r\nimport { useSelector } from '../overrideHooks'\r\n\r\ninterface CustomPaginateHandlePageClick{\r\n    selected:number\r\n}\r\n\r\nexport const CustomPaginate:React.FC = () => {\r\n    \r\n    const imgArr:Array<string> = [img1,img2,img3,img4]\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const {data} = useSelector(state => state.bootCamps)\r\n    \r\n    //what parameter giving api the count in reducer??????????????????\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(bootCampsThunk())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    function handlePageClick({ selected: selectedPage }:CustomPaginateHandlePageClick) {\r\n        setCurrentPage(() => selectedPage);\r\n    }\r\n\r\n    const PER_PAGE:number = 4;\r\n    const offset:number = currentPage * PER_PAGE;\r\n    const currentPageData = data.slice(offset, offset + PER_PAGE)\r\n    \r\n\r\n    const pageCount = Math.ceil(data.length / PER_PAGE);\r\n\r\n    return (\r\n            <div className=\"testingPaginate\">\r\n                {!data.length && imgArr.map((e,i) => {\r\n                    return <Card key={i} src={e}/>\r\n                })}\r\n                {currentPageData?.map((e) => <Card key={e.id} address = {e.address} name={e.name} careers={e.careers}/>)}\r\n                <ReactPaginate\r\n                    previousLabel={\"prev\"}\r\n                    nextLabel={\"next\"}\r\n                    pageCount={pageCount || 1}\r\n                    onPageChange={handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    previousLinkClassName={\"pagination__link\"}\r\n                    nextLinkClassName={\"pagination__link\"}\r\n                    disabledClassName={\"pagination__link--disabled\"}\r\n                    activeClassName={\"pagination__link--active\"}\r\n                    pageRangeDisplayed={5}\r\n                    marginPagesDisplayed={3}\r\n                    breakLabel={'...'}\r\n                />\r\n            </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Select, { components } from \"react-select\";\r\nimport { ICustomSelectPayloadInner } from \"../CustomSelectForm/CustomSelectForm\";\r\n\r\ninterface IIconObject{\r\n  src: string,\r\n  id: string,\r\n  className: string,\r\n}\r\n\r\ninterface ISelectFormProps{\r\n  dataName:string,\r\n  control:any,\r\n  className:string,\r\n  options:Array<ICustomSelectPayloadInner>,\r\n  iconObj:IIconObject,\r\n}\r\n\r\nexport const SelectCreator:React.FC<ISelectFormProps> = ({\r\n  dataName,\r\n  control,\r\n  className,\r\n  options,\r\n  iconObj,\r\n}) => {\r\n  const DropdownIndicator:React.FC<any> = (props) => {\r\n    return (\r\n      <div>\r\n        <components.DropdownIndicator {...props}>\r\n          <svg className={iconObj.className}>\r\n            <use href={`${iconObj.src + \"#\" + iconObj.id}`} />\r\n          </svg>\r\n        </components.DropdownIndicator>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Controller\r\n      name={dataName}\r\n      control={control}\r\n      defaultValue={options[0]}\r\n      as={\r\n        <Select\r\n          defaultValue={options[0]}\r\n          components={{ DropdownIndicator }}\r\n          className={className}\r\n          options={options}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from 'react'\r\nimport styles from './SubmitButton.module.scss'\r\n\r\ninterface ISubmitButtonProps {\r\n    value?:string,\r\n    clsName?:string\r\n}\r\n\r\nexport const SubmitButton:React.FC<ISubmitButtonProps> = ({value, clsName}) => {\r\n    return <input type=\"submit\" value={value || `Find Bootcamps`} className={`${styles.btn} ${clsName || ''}`}/>\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport arrows from \"../../icons/arrows.svg\";\r\nimport { SelectCreator } from \"../SelectCreator/SelectCreator\";\r\nimport { SubmitButton } from \"../SubmitButton/SubmitButton\";\r\nimport styles from \"./CustomSelectForm.module.scss\";\r\n\r\nexport interface ICustomSelectPayloadInner{\r\n  value:string,\r\n  label:string\r\n}\r\n\r\nexport interface ICustomSelectPayload{\r\n  ratingSelect:ICustomSelectPayloadInner\r\n  budgetSelect:ICustomSelectPayloadInner\r\n}\r\n\r\nexport const CustomSelectForm:React.FC = () => {\r\n  const { control, handleSubmit } = useForm();\r\n  const onSubmit = (data:ICustomSelectPayload) => {\r\n    // console.warn(data)\r\n  };\r\n\r\n  const ratingSelect = [\r\n    { value: '1', label: 'a' },\r\n    { value: '2', label: 'b' },\r\n    { value: '3', label: 'c' }\r\n  ]\r\n  const budgetSelect = [\r\n    { value: '3', label: 'e' },\r\n    { value: '4', label: 'd' },\r\n    { value: '5', label: 'f' }\r\n  ]\r\n  const iconObj = {\r\n    src: arrows,\r\n    id: \"arrow\",\r\n    className: styles.arrow,\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n        <span>Rating</span>\r\n        <SelectCreator\r\n          iconObj={iconObj}\r\n          dataName=\"ratingSelect\"\r\n          className={styles.rating}\r\n          control={control}\r\n          options={ratingSelect}\r\n        />\r\n        <span>Budget</span>\r\n        <SelectCreator\r\n          iconObj={iconObj}\r\n          dataName=\"budgetSelect\"\r\n          className={styles.budget}\r\n          control={control}\r\n          options={budgetSelect}\r\n        />\r\n        <SubmitButton />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { CustomForm } from '../CustomForm/CustomForm'\r\nimport { CustomPaginate } from '../CustomPaginate/CustomPaginate'\r\nimport { CustomSelectForm } from '../CustomSelectForm/CustomSelectForm'\r\nimport styles from './BootCamps.module.scss'\r\n\r\nexport const BootCamps:React.FC = () => {\r\n\r\n    return (\r\n        <section className={styles.root}>\r\n            <div className=\"container\">\r\n                <div className={styles.innerContainer}>\r\n                    <aside className={styles.aside}>\r\n                        <div className={styles.location}>\r\n                            <CustomForm/>\r\n                            <span>Filter</span>\r\n                            <CustomSelectForm/>\r\n                        </div>\r\n                    </aside>\r\n                    <div className={styles.cardContainer}>\r\n                        <CustomPaginate/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styles from \"./FormTitle.module.scss\";\r\n\r\ninterface IFormTitleProps {\r\n  svgHref?:string,\r\n  title:string,\r\n  text?:string\r\n}\r\n\r\nexport const FormTitle:React.FC<IFormTitleProps> = ({svgHref, title, text}) => {\r\n    return (\r\n      <div className={styles.root}>\r\n          <div className={styles.top}>\r\n            {svgHref && \r\n            <svg className={styles.svg}>\r\n              <use href={svgHref} />\r\n            </svg>}\r\n            {title && <h2>{title}</h2>}\r\n          </div>\r\n          <div className={styles.subtitle}>\r\n            {text && \r\n            <span>\r\n              {text}\r\n            </span>}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n","//className in index\r\nexport const MY__CUSTOM__ERROR__CLASS__NAME = 'MY__CUSTOM__ERROR__CLASS__NAME'","import React from \"react\";\r\nimport { MY__CUSTOM__ERROR__CLASS__NAME } from '../globalConstants';\r\nimport styles from './CustomInput.module.scss';\r\n\r\n//TODO refactoring logic\r\n\r\nexport const CustomInput:React.FC<ICustomInputProps> = ({ refForMatch, errors, required = false, autocomplete, text, register, name, placeholder, type, clsName }) => {\r\n  return (\r\n   <div className={styles.root}>\r\n     {text && <span className={styles.span}>{text}</span>}\r\n      <input\r\n        className={`${styles.input} ${clsName ? clsName : ''} ${name && errors && errors[name] && MY__CUSTOM__ERROR__CLASS__NAME }`}\r\n        name={name || \"set name for send\"}\r\n        ref={ \r\n          register && ((name === 'confirmPassword') || (name === 'confirmNewPassword')) \r\n        ? register({validate: (value:string) => {\r\n          return  value === refForMatch!.current || false\r\n        }})\r\n        : register ? register({required:required}) : null}\r\n        placeholder={placeholder || \"\"}\r\n        type={type || \"text\"}\r\n        autoComplete={autocomplete ? 'on' : 'off'}\r\n      />\r\n   </div>\r\n  );\r\n};\r\n\r\ninterface ICustomInputProps{ \r\n  refForMatch?:any,\r\n  errors:any, \r\n  required?:boolean, \r\n  autocomplete?:boolean, \r\n  text:string, \r\n  register:any, \r\n  name:string, \r\n  placeholder:string, \r\n  type?:string, \r\n  clsName?:string\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './ForgotButton.module.scss'\r\n\r\nexport const ForgotButton:React.FC = () => {\r\n    return (\r\n        \r\n        <div className={styles.forgotButtonContainer}>\r\n            <span className={styles.text}>Forgot Password?</span>\r\n            <NavLink to={'/Reset'} className={styles.btn}>Reset Password</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { loginActions, loginThunk } from \"../../redux/loginReducer/loginActions\";\r\nimport { CustomInput } from \"../CustomInput/CustomInput\";\r\nimport { ForgotButton } from \"../ForgotButton/ForgotButton\";\r\nimport { useSelector } from \"../overrideHooks\";\r\nimport { SubmitButton } from \"../SubmitButton/SubmitButton\";\r\nimport styles from './LoginForm.module.scss';\r\n\r\nexport const LoginForm:React.FC = () => {\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const success = useSelector(state => state.login.success)\r\n  const isRouteCompile = useSelector(state => state.login.isRouteComplete)\r\n  console.log(success)\r\n  console.log(isRouteCompile)\r\n\r\n\r\n  const onSubmit = (data:ILoginPayload) => {\r\n    dispatch(loginThunk(data))\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if(success && isRouteCompile){\r\n      history.push('/BrowserBootCamps')\r\n    }\r\n    return () => {\r\n      dispatch(loginActions.isComplete())\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[success,isRouteCompile])\r\n\r\n  const passwordInput = {\r\n    name:'password',\r\n    text:'Password',\r\n    register,\r\n    errors,\r\n    required:true,\r\n    placeholder:'Enter Password',\r\n    type:'password',\r\n    autocomplete:true\r\n  }\r\n  const emailAddressInput = {\r\n    name:'email',\r\n    text:'Email Address',\r\n    register,\r\n    errors,\r\n    required:true,\r\n    placeholder:'Enter Email',\r\n    type:'text',\r\n    autocomplete:true\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <form  onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={styles.inputContainer}>\r\n          </div>\r\n          <div className={styles.inputContainer}>\r\n                <CustomInput {...passwordInput}/>\r\n                <CustomInput {...emailAddressInput}/>\r\n          </div>\r\n          <SubmitButton value={'Login'} clsName={styles.clsName}/>\r\n        </form>\r\n        <ForgotButton/>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport interface ILoginPayload{\r\n  password:string,\r\n  email:string\r\n}","import React from \"react\";\r\nimport { FormTitle } from \"../FormTitle/FormTitle\";\r\nimport { icons } from '../icons';\r\nimport { LoginForm } from \"../LoginForm/LoginForm\";\r\nimport styles from \"./Login.module.scss\";\r\n\r\n\r\nexport const Login = () => {\r\n  \r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"container\">\r\n          <FormTitle\r\n          title={`Login`}\r\n           svgHref={`${icons.login}#loginLogo`}\r\n           text={`Log in to list your bootcamp or rate, review and favorite bootcamps`}/>\r\n          <LoginForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { CustomForm } from '../CustomForm/CustomForm'\r\nimport styles from './Home.module.scss'\r\n\r\nexport const Home:React.FC = () => {\r\n    return (\r\n        <section className={styles.root}>\r\n            <div className=\"container\">\r\n                <div className={styles.innerContainer}>\r\n                    <div className={styles.title}>\r\n                        <h1>Find a Code Bootcamp</h1>\r\n                        <span>Find, rate and read reviews on coding bootcamps</span>\r\n                    </div>\r\n                    <CustomForm/>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MY__CUSTOM__ERROR__CLASS__NAME } from '../globalConstants'\r\nimport styles from './CustomRadioInput.module.scss'\r\n\r\ninterface ICustomRadioInputProps{ \r\n    required:boolean, \r\n    errors:any, \r\n    title:string, \r\n    register:any, \r\n    name:string, \r\n    clsName?:string, \r\n    radios:Array<IRadios>\r\n}\r\ninterface IRadios {\r\n    id:number,\r\n    value:string,\r\n    text:string,\r\n}\r\n\r\n\r\nexport const CustomRadioInput:React.FC<ICustomRadioInputProps> = ({ required = false, errors, title, register, name, clsName, radios }) => {\r\n    return (\r\n        <div className={`${styles.root} ${name && errors && errors[name] && MY__CUSTOM__ERROR__CLASS__NAME }`}>\r\n            <h3 className={styles.title}>{title}</h3>\r\n        {radios.map((e,i) => {\r\n            return (\r\n                <div key={e.id} className={styles.inputContainer}>\r\n                    <input value={e.value} className={styles.input} ref={register({required:required})} name={name} type='radio'/>\r\n                    <span className={styles.span}>{e.text}</span>\r\n                </div>\r\n            )\r\n        })}\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { registerActions, registerThunk } from '../../redux/registerReducer/registerActions';\r\nimport { CustomInput } from '../CustomInput/CustomInput';\r\nimport { CustomRadioInput } from '../CustomRadioInput/CustomRadioInput';\r\nimport { useSelector } from '../overrideHooks';\r\nimport { SubmitButton } from '../SubmitButton/SubmitButton';\r\nimport styles from './RegisterForm.module.scss';\r\n\r\n\r\nexport const RegisterForm:React.FC = () => {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const success = useSelector(state => state.register.success)\r\n\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\")\r\n    \r\n    useEffect(() => {\r\n      if(success){\r\n        history.push('/Login')\r\n      }\r\n      return () => {\r\n        dispatch(registerActions.reset())\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[success])\r\n\r\n    \r\n\r\n    const onSubmit = (data:IRegisterPayload) => {\r\n      delete data.confirmPassword\r\n      dispatch(registerThunk(data))\r\n    };\r\n  \r\n    const nameInput = {\r\n      name:'name',\r\n      text:'Name',\r\n      register,\r\n      errors,\r\n      required:true,\r\n      placeholder:'Enter Full Name',\r\n    }\r\n    const emailAddressInput = {\r\n      name:'email',\r\n      text:'Email Address',\r\n      register,\r\n      errors,\r\n      required:true,\r\n      placeholder:'Enter Email',\r\n    }\r\n    const passwordInput = {\r\n        name:'password',\r\n        text:'Password',\r\n        register,\r\n        errors,\r\n        required:true,\r\n        placeholder:'Enter Password',\r\n        type:'password',\r\n      }\r\n      const confirmPassword = {\r\n        name:'confirmPassword',\r\n        text:'Confirm Password',\r\n        register,\r\n        refForMatch:password,\r\n        required:true,\r\n        errors,\r\n        placeholder:'Confirm Password',\r\n        type:'password',\r\n      }\r\n\r\n      const userRole = {\r\n          name:'role',\r\n          title:'User Role',\r\n          register,\r\n          errors,\r\n          required:true,\r\n          radios:[\r\n            {\r\n            id:1,\r\n            value:'publisher',\r\n            text:'Regular User (Browse, Write reviews, etc)',\r\n            },\r\n            {\r\n            id:2,\r\n            value:'publisher',\r\n            text:'Bootcamp Publisher'\r\n            }\r\n          ]\r\n      }\r\n      \r\n    return (\r\n      <>\r\n          <form  onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={styles.inputContainer}>\r\n                  <CustomInput {...nameInput}/>\r\n                  <CustomInput {...emailAddressInput}/>\r\n                  <CustomInput {...passwordInput}/>\r\n                  <CustomInput {...confirmPassword}/>\r\n                  <CustomRadioInput {...userRole}/>\r\n            </div>\r\n            <span className={styles.redText}>* You must be affiliated with the bootcamp in some way in order to add it to DevCamper.</span>\r\n            <SubmitButton value={'Register'} clsName={styles.clsName}/>\r\n          </form>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\nexport interface IRegisterPayload {\r\n  name:string,\r\n  email:string,\r\n  password:string,\r\n  role:string,\r\n  confirmPassword?:string\r\n}","import React from 'react'\r\nimport { FormTitle } from '../FormTitle/FormTitle'\r\nimport { icons } from '../icons'\r\nimport { RegisterForm } from '../RegisterForm/RegisterForm'\r\nimport styles from './Register.module.scss'\r\n\r\nexport const Register = () => {\r\n    return (\r\n        <div className={styles.root}>\r\n            <FormTitle \r\n            svgHref={`${icons.register}#registerLogo`}\r\n            title={`Register`}\r\n            text={`Register to list your bootcamp or rate, review and favorite bootcamps`}\r\n\r\n            />\r\n            <RegisterForm/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { updateThunk } from \"../../redux/updateReducer/updateActions\";\r\nimport { CustomInput } from \"../CustomInput/CustomInput\";\r\nimport { useSelector } from \"../overrideHooks\";\r\nimport { SubmitButton } from \"../SubmitButton/SubmitButton\";\r\nimport styles from './UpdateForm.module.scss';\r\n\r\nexport const UpdateForm:React.FC = () => {\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const success = useSelector(state => state.update.success)\r\n  \r\n  const onSubmit = (data:IUpdatePayload) => {\r\n      delete data.confirmNewPassword\r\n      dispatch(updateThunk(data))\r\n  };\r\n  const password = useRef({});\r\n    password.current = watch(\"newPassword\", \"\")\r\n\r\n  useEffect(() => {\r\n      if(success){\r\n          history.push('/Login')\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[success])\r\n\r\n\r\n  const currentPasswordInput = {\r\n    name:'currentPassword',\r\n    text:'Current Password',\r\n    register,\r\n    errors,\r\n    required:true,\r\n    placeholder:'Current Password',\r\n    type:'password',\r\n    autocomplete:false\r\n  }\r\n  const newPasswordInput = {\r\n    name:'newPassword',\r\n    text:'New Password',\r\n    register,\r\n    errors,\r\n    required:true,\r\n    placeholder:'New Password',\r\n    type:'password',\r\n    autocomplete:false\r\n  }\r\n  const confirmNewPasswordInput = {\r\n    name:'confirmNewPassword',\r\n    text:'Confirm New Password',\r\n    register,\r\n    refForMatch:password.current,\r\n    errors,\r\n    required:true,\r\n    placeholder:'Confirm New Password',\r\n    type:'password',\r\n    autocomplete:false\r\n  }\r\n\r\n  return (\r\n    <>\r\n        <form  onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={styles.inputContainer}>\r\n          </div>\r\n          <div className={styles.inputContainer}>\r\n                <CustomInput {...currentPasswordInput}/>\r\n                <CustomInput {...newPasswordInput}/>\r\n                <CustomInput {...confirmNewPasswordInput}/>\r\n          </div>\r\n          <SubmitButton value={'Update Password'} clsName={styles.clsName}/>\r\n        </form>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport interface IUpdatePayload{\r\n  currentPassword:string,\r\n  newPassword:string,\r\n  confirmNewPassword?:string\r\n}","import React from \"react\";\r\nimport { FormTitle } from \"../FormTitle/FormTitle\";\r\nimport { UpdateForm } from \"../UpdateForm/UpdateForm\";\r\nimport styles from \"./Update.module.scss\";\r\n\r\n\r\nexport const Update:React.FC = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"container\">\r\n          <FormTitle title={`Update`}/>\r\n          <UpdateForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n};","\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { Update } from '../Update/Update'\r\nimport styles from './PrivateRoute.module.scss'\r\n\r\nexport const PrivateRoute = () => {\r\n    const success = useSelector(state => state.login.success)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        if(!success){\r\n            history.push('./home')\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    return (\r\n        <div className={styles.root}>\r\n            {success ?  <div className={styles.root}>\r\n                        <Update/>\r\n                    </div>\r\n                : null}\r\n        </div>\r\n    )\r\n}\r\n                            ","import { IResetPayload } from './../../components/ResetForm/ResetForm';\r\nimport { requestAPI } from \"../../api/requestMethod\"\r\nimport { GetActionsTypes, ThunkType } from \"../../globalTypes\"\r\nimport { loginActions, LoginActionsTypes } from \"../loginReducer/loginActions\"\r\nimport { ResetTypes } from \"./types\"\r\n\r\n\r\nexport const resetActions = {\r\n    start:() => {\r\n        return {type:ResetTypes.START} as const\r\n    },\r\n    process:() => {\r\n        return {type:ResetTypes.PROCESS} as const\r\n    },\r\n    end:(payload:EndPayload) => {\r\n        return {type:ResetTypes.END,payload} as const\r\n    },\r\n    error:(payload:ErrorPayload) => {\r\n        return {type:ResetTypes.ERROR,payload} as const\r\n    },\r\n    reset:() => {\r\n        return {type:ResetTypes.RESET} as const\r\n    }\r\n}\r\nexport type ResetActionsTypes = GetActionsTypes<typeof resetActions>\r\n\r\n\r\n\r\nexport const resetThunk = (payload:IResetPayload):ThunkType<ResetActionsTypes | LoginActionsTypes> => (dispatch) => {\r\n\r\n    dispatch(resetActions.start())\r\n    dispatch(resetActions.process())\r\n    requestAPI.resetPassword(payload)\r\n    .then(data => {\r\n        //need another way\r\n        dispatch(loginActions.reset())\r\n        //need another way\r\n        dispatch(resetActions.end(data))\r\n    })\r\n    .catch(e => {\r\n        dispatch(resetActions.error(e.response.data))\r\n        alert(e.response?.data?.error);\r\n    })\r\n}\r\n\r\n\r\ntype EndPayload = {\r\n    success:boolean,\r\n}\r\n\r\ntype ErrorPayload = {\r\n    success:boolean,\r\n    error:string\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { resetThunk } from \"../../redux/resetReducer/resetActions\";\r\nimport { CustomInput } from \"../CustomInput/CustomInput\";\r\nimport { useSelector } from \"../overrideHooks\";\r\nimport { SubmitButton } from \"../SubmitButton/SubmitButton\";\r\nimport styles from \"./ResetForm.module.scss\";\r\n\r\nexport const ResetForm = () => {\r\n  const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const success = useSelector((state) => state.reset.success);\r\n\r\n  const onSubmit = (data:IResetPayload) => {\r\n    dispatch(resetThunk(data));\r\n  };\r\n\r\n  const password = useRef({});\r\n  password.current = watch(\"newPassword\", \"\");\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(\"/Login\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [success]);\r\n\r\n  const resetPassWord = {\r\n    name: \"email\",\r\n    text: \"Enter Email\",\r\n    register,\r\n    errors,\r\n    required: true,\r\n    placeholder: \"Enter address\",\r\n    type: \"text\",\r\n    autocomplete: false,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={styles.inputContainer}></div>\r\n        <div className={styles.inputContainer}>\r\n          <CustomInput {...resetPassWord} />\r\n        </div>\r\n        <SubmitButton value={\"Reset Password\"} clsName={styles.clsName} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport interface IResetPayload {\r\n  email:string\r\n}\r\n","import React from \"react\";\r\nimport { FormTitle } from \"../FormTitle/FormTitle\";\r\nimport { ResetForm } from \"../ResetForm/ResetForm\";\r\nimport styles from \"./Reset.module.scss\";\r\n\r\n\r\nexport const Reset = () => {\r\n  \r\n  return (\r\n    <div className={styles.root}>\r\n      <div className=\"container\">\r\n          <FormTitle title={`Reset Password`}/>\r\n          <ResetForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport {ErrorBoundary} from '../ErrorBoundary/ErrorBoundary'\r\nimport {BootCamps} from '../BootCamps/BootCamps'\r\nimport {Login} from '../Login/Login'\r\nimport {Home} from '../Home/Home'\r\nimport {Register} from '../Register/Register'\r\nimport {PrivateRoute} from '../PrivateRoute/PrivateRoute'\r\nimport {Reset} from '../Reset/Reset'\r\n\r\nimport styles from \"./RoutesContainer.module.scss\";\r\n\r\n\r\nexport const RoutesContainer:React.FC = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path=\"/BrowserBootCamps\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <BootCamps/>\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/Login\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <Login />\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/Home\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <Home />\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/Register\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <Register />\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/UpdatePassword\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <PrivateRoute />\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/Reset\"\r\n          render={() => (\r\n            <ErrorBoundary>\r\n              <Reset />\r\n            </ErrorBoundary>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar } from './components/Navbar/Navbar';\r\nimport { RoutesContainer } from './components/RoutesContainer/RoutesContainer';\r\nimport { authMeThunk } from './redux/authMeReducer/authMeActions';\r\n\r\nexport const App:React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    dispatch(authMeThunk())\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[])\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n      <RoutesContainer/>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\n//add localStorage\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nimport {App} from './App';\r\nimport './index.scss';\r\nimport { rootReducer } from './redux/rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nlet store = createStore(persistedReducer,applyMiddleware(\r\n  thunk,\r\n  logger,\r\n))\r\nlet persistor = persistStore(store)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter\r\n      basename=\"another-spa-with-auth-logic\"\r\n      >\r\n        <App />\r\n      </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__27gV0\",\"titleContainer\":\"Card_titleContainer__TqMIQ\",\"title\":\"Card_title__3l8Aq\",\"address\":\"Card_address__1u-4L\",\"text\":\"Card_text__1Qmco\",\"rate\":\"Card_rate__2eoHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NavLinkCreator_root__2LBbL\",\"link\":\"NavLinkCreator_link__1zI_0\",\"dropDownContainer\":\"NavLinkCreator_dropDownContainer__1copu\",\"line\":\"NavLinkCreator_line__1ai0G\",\"selected\":\"NavLinkCreator_selected__3IdUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Navbar_root__1JhPR\",\"logo\":\"Navbar_logo__1E_pc\",\"innerContainer\":\"Navbar_innerContainer__2QKUZ\",\"nav\":\"Navbar_nav__N628v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomSelectForm_root__gSVrT\",\"form\":\"CustomSelectForm_form__1tyZj\",\"select\":\"CustomSelectForm_select__cjwWP\",\"arrow\":\"CustomSelectForm_arrow__20vgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BootCamps_root__j_bkt\",\"innerContainer\":\"BootCamps_innerContainer__1tWsr\",\"aside\":\"BootCamps_aside__lrlzJ\",\"location\":\"BootCamps_location__3CI2Q\",\"cardContainer\":\"BootCamps_cardContainer__5XYSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomRadioInput_root__10uSL\",\"title\":\"CustomRadioInput_title__hoYsX\",\"span\":\"CustomRadioInput_span__flcDT\",\"inputContainer\":\"CustomRadioInput_inputContainer__xk4-n\",\"input\":\"CustomRadioInput_input__2BHAJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomForm_root__1-YaC\",\"form\":\"CustomForm_form__1vMuU\",\"inputs\":\"CustomForm_inputs__2C367\",\"btn\":\"CustomForm_btn__6kSwu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"FormTitle_root__2ZOu5\",\"top\":\"FormTitle_top__2jbvN\",\"svg\":\"FormTitle_svg__3FgiJ\",\"subtitle\":\"FormTitle_subtitle__1EydQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CustomInput_root__g1CwK\",\"span\":\"CustomInput_span__1x43h\",\"input\":\"CustomInput_input__2WlzJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotButtonContainer\":\"ForgotButton_forgotButtonContainer__3J-71\",\"btn\":\"ForgotButton_btn__3vy8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"LoginForm_inputContainer__2lidU\",\"clsName\":\"LoginForm_clsName__2U0GW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__2b4vp\",\"innerContainer\":\"Home_innerContainer__3uLss\",\"title\":\"Home_title___PcWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"RegisterForm_inputContainer__Z0c1n\",\"clsName\":\"RegisterForm_clsName__3EpYs\",\"redText\":\"RegisterForm_redText__346hH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"UpdateForm_inputContainer__2MNMN\",\"clsName\":\"UpdateForm_clsName__2SBkJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"ResetForm_inputContainer__2EZew\",\"clsName\":\"ResetForm_clsName__31H0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SubmitButton_btn__3HPL4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__1vGOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Register_root___Ce-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Update_root__1trK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Reset_root__I28jY\"};"],"sourceRoot":""}